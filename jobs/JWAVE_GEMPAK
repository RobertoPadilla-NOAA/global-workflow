#!/bin/bash

date
export PS4=' $SECONDS + '
set -xa

##########################################
# Source machine runtime environment
##########################################
#XXX . $HOMEgfs/env/${machine}.env gempak
#XXX status=$?
#XXX [[ $status -ne 0 ]] && exit $status

# PATH for working directory
export NET=${NET:-gfs}
export RUN=wave
export model=${model:-gdaswave}

export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export HOMEgfs=${HOMEgfs:-$NWROOT/gfs.${gfs_ver}}

# Add default errchk = err_chk
export errchk=${errchk:-err_chk}

# Set HOMEwave to HOMEgefs
HOMEwave=${HOMEwave:-${HOMEgfs}} 

# Create and go to DATA directory
export DATA=${DATA:-${DATAROOT:?}/${jobid}}
mkdir -p $DATA
cd $DATA

export cyc=${cyc:-00}
export cycle=${cycle:-t${cyc}z}
  
# Set PDY
setpdy.sh
sh ./PDY

export pgmout=OUTPUT.$$

export MP_PULSE=0

GEMPAKwave=${HOMEwave}/gempak    #XXX ???
export NAGRIB_TABLE=${GEMPAKwave}/fix/nagrib.tbl   #XXX ???

# Path to HOME Directory
export CODEwave=${CODEwave:-${NWROOT}/${NET}_code.${wave_code_ver}/${code_pkg}}
export EXECwave=${EXECwave:-$HOMEwave/exec}
export FIXwave=${FIXwave:-$HOMEwave/fix/fix_wave_${NET}}
export PARMwave=${PARMwave:-$HOMEwave/parm/wave}
export USHwave=${USHwave:-$HOMEwave/ush}
export EXECcode=${EXECcode:-$CODEwave/exe}

# Set COM Paths and GETGES environment
export COMINwave=${COMINwave:-${COMROOT:?}/${NET}/${envir}}
export COMOUTwave=${COMOUTwave:-${COMROOT:?}/${NET}/${envir}}
export COMIN=${COMIN:-${COMINwave}/${RUN}.${PDY}/${cyc}}
export COMOUT=${COMOUT:-${COMOUTwave}/${RUN}.${PDY}/${cyc}}

export COMINice=${COMINice:-${COMROOTp2}/omb/prod}
export COMINwnd=${COMINwnd:-${COMROOT}/gfs/prod}
export COMINcur=${COMINcur:-${COMROOTp2}/rtofs/prod}

if [ $SENDCOM = YES ]; then
  mkdir -p $COMOUT/gridded
  mkdir -p $COMOUT/station
  mkdir -p $COMOUT/stats
fi

export wavelog=${COMOUTwave}/wave.log

# Set mpi serial command
export wavempexec=${wavempexec:-"mpirun"}
export wave_mpmd=${wave_mpmd:-"cfp"}

env | sort

# Set parameters using gwes_post.parm
if [ "${NET}" == "gens" ]
then
  . ${HOMEgefs}/parm/gefs.parm
elif [ "${NET}" == "gfs" ]
then
  echo 'Placeholder for GFS config'
fi

###################################
# Set up variables and execute script
###################################
nfile=$LSB_DJOB_NUMPROC

# Set up GEMPAK/NTRANS environment

export GRIB=grib
export EXT=""
export DBN_ALERT_TYPE=WAVE_GEMPAK
export fstart=000
#XXX export fend=180
export fend=9
export finc=3

for grdID in $grids
do
  DATAgrid=${DATA}/${grdID}_gem
  mkdir -p -m 755 $DATAgrid
  echo "$HOMEwave/scripts/exwave_nawips.sh  $grdID $model $DATAgrid >$DATA/gempak_${grdID}.out 2>&1" >> $DATA/poescript
done

env

# NOTES: JY 11/06 the following chmod line is missing in phase2 production and original transition package
# fixing that would create and alert 61 additional mww3enp10m_${yyyymmddcc}f${hhh} files
# So will fix it in the next upgrade and leave it as it is for the Dell transition
 chmod 775 $DATA/poescript

if [ $nfile -gt 1 ]
then
  chmod 775 $DATA/poescript
  export MP_PGMMODEL=mpmd
  export MP_CMDFILE=$DATA/poescript
  #poe
  mpirun -n $nfile cfp $MP_CMDFILE
  export err=$?; err_chk
else
  $DATA/poescript
fi
err=$?
if [ $err -ne 0 ]; then
  msg="FATAL ERROR: ex-script of WAVE_POST_SBS failed!"
else
  msg="$job completed normally!"
fi
postmsg "$jlogfile" "$msg"

# Remove temp directories
if [ "$KEEPDATA" != "YES" ]; then
  cd $DATAROOT
##  rm -rf $DATA
fi
date


