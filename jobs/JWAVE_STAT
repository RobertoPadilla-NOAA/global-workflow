#!/bin/bash

date
export PS4=' $SECONDS + '
set -x -e

##########################################
# Source machine runtime environment
##########################################
. $HOMEgfs/env/${machine}.env wavestat
status=$?
[[ $status -ne 0 ]] && exit $status

# PATH for working directory
export NET=${NET:-gens}
export RUN=${RUN:-gwes}

export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export HOMEgfs=${HOMEgfs:-$NWROOT/gfs.${gfs_ver}}

# Add default errchk = err_chk
export errchk=${errchk:-err_chk}

# Set HOMEwave to HOMEgfs
HOMEwave=${HOMEwave:-${HOMEgfs}} 

# Create and go to DATA directory
export DATA=${DATA:-${DATAROOT:?}/${jobid}}
mkdir -p $DATA
cd $DATA

cyc=${cyc:-00}
export cycle=${cycle:-t${cyc}z}
 
# Set PDY
setpdy.sh
sh ./PDY

export pgmout=OUTPUT.$$

export MP_PULSE=0

# Path to HOME Directory
export CODEwave=${CODEwave:-${NWROOT}/${NET}_code.${wave_code_ver}/${code_pkg}}
export EXECwave=${EXECwave:-$HOMEwave/exec}
export FIXwave=${FIXwave:-$HOMEwave/fix/fix_wave_${NET}}
export PARMwave=${PARMwave:-$HOMEwave/parm/wave}
export USHwave=${USHwave:-$HOMEwave/ush}
export EXECcode=${EXECcode:-$CODEwave/exe}

# Set COM Paths and GETGES environment
export COMINwave=${COMINwave:-${COMROOT:?}/${NET}/${envir}}
export COMOUTwave=${COMOUTwave:-${COMROOT:?}/${NET}/${envir}}
export COMIN=${COMIN:-${COMINwave}/${RUN}.${PDY}/${cyc}}
export COMOUT=${COMOUT:-${COMOUTwave}/${RUN}.${PDY}/${cyc}}

export COMINice=${COMINice:-${COMROOTp2}/omb/prod}
export COMINwnd=${COMINwnd:-${COMROOT}/gfs/prod}
export COMINcur=${COMINcur:-${COMROOTp2}/rtofs/prod}

if [ $SENDCOM = YES ]; then
  mkdir -p $COMOUT/gridded
  mkdir -p $COMOUT/station
  mkdir -p $COMOUT/stats
fi

export wavelog=${COMOUTwave}/wave.log

# Set mpi serial command
export wavempexec=${wavempexec:-"mpirun"}
export wave_mpmd=${wave_mpmd:-"cfp"}

env | sort

# Set parameters using gwes_stat.parm
if [ "${NET}" == "gens" ]
then
  . ${HOMEgefs}/parm/gefs.parm
elif [ "${NET}" == "gfs" ]
then
  echo 'Placeholder for GFS config'
fi
. $PARMwave/wave.parm.${NET}
. $PARMwave/wave_stat.parm.${NET}

# Set wave model ID tag to include member number 
# if ensemble; waveMEMB var empty in deterministic
# Set wave model ID tag to include member number
# if ensemble; waveMEMB var empty in deterministic
membTAG='p'
if [ "${waveMEMB}" == "00" ]; then membTAG='c'; fi
export membTAG
export WAV_MOD_TAG=${WAV_MOD_ID}${waveMEMB}

export CFP_VERBOSE=1

# Execute the Script  
$HOMEwave/scripts/exwave_stat.sh
err=$?
if [ $err -ne 0 ]; then
  msg="FATAL ERROR: ex-script of WAVE_STAT failed!"
else
  msg="$job completed normally!"
fi
postmsg "$jlogfile" "$msg"

# Remove temp directories
if [ "$KEEPDATA" != "YES" ]; then
  cd $DATAROOT
  rm -rf $DATA
fi
date

